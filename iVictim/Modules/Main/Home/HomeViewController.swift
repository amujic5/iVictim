//
//  HomeViewController.swift
//  iVictim
//
//  Created by Azzaro Mujic on 31/05/16.
//  Copyright (c) 2016 __MyCompanyName__. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

// MARK: -  Home View Controller -
protocol HomeViewControllerOutput: class {
    
}

final class HomeViewController: UIViewController {
    
    var output: HomeViewControllerOutput!
    
    // MARK: - Home view interface requirements
    
    weak var menuViewController: MenuViewController?
    @IBOutlet weak var menuBackgroundVuew: UIView!
    @IBOutlet weak var menuParentView: UIView!
    @IBOutlet var edgePan: UIScreenEdgePanGestureRecognizer!
    @IBOutlet var panToClose: UIPanGestureRecognizer!
    
    
    // MARK: - View lifecycle -
    override func viewDidLoad() {
        super.viewDidLoad()
        
        self.menuBackgroundVuew.alpha = 0
        self.menuParentView.transform = CGAffineTransformMakeTranslation(-screenWidth(), 0)
        
        edgePan.addTarget(self, action: #selector(HomeViewController.didEdgePan(_:)))
        panToClose.addTarget(self, action: #selector(HomeViewController.didPan(_:)))
    }
    
    override func viewWillAppear(animated: Bool) {
        super.viewWillAppear(animated)
        navigationController?.setNavigationBarHidden(true, animated: animated)
    }
  
    // MARK: - pan -
    
    @objc func didEdgePan(recognizer: UIPanGestureRecognizer)  {
        let translation = recognizer.translationInView(recognizer.view!.superview!)
        let translationPercentage = max(min(translation.x / (screenWidth()), 1), 0)
        
        switch recognizer.state {
        case .Ended, .Cancelled:
            let translationVelocity = recognizer.velocityInView(recognizer.view!.superview!)
            let velocityPercentage = translationVelocity.x / (screenWidth())
            
            UIView.animateWithDuration(0.2, animations: {
                if velocityPercentage > 0.5 {
                    self._showMenu()
                } else {
                    self._hideMenu()
                }
            })
            
        default:
            menuParentView.transform = CGAffineTransformMakeTranslation(translationPercentage * menuParentView.frame.width - menuParentView.frame.width, 0)
            menuBackgroundVuew.alpha = translationPercentage
        }
    }
    
    
    @objc func didPan(recognizer: UIPanGestureRecognizer)  {
        let translation = recognizer.translationInView(recognizer.view!.superview!)
        let translationPercentage = 1 - max(min(-translation.x / (screenWidth()*0.87), 1), 0)
        
        switch recognizer.state {
        case .Ended, .Cancelled:
            let translationVelocity = recognizer.velocityInView(recognizer.view!.superview!)
            let velocityPercentage = 1 - translationVelocity.x / (screenWidth()*0.87)
            
            UIView.animateWithDuration(0.2, animations: {
                if velocityPercentage < 0.5 {
                    self.menuParentView.transform = CGAffineTransformMakeTranslation(0, 0)
                    self.menuBackgroundVuew.alpha = 1
                } else {
                    self.menuBackgroundVuew.alpha = 0
                    self.menuParentView.transform = CGAffineTransformMakeTranslation(-self.menuParentView.frame.width, 0)
                }
            })
            
        default:
            menuParentView.transform = CGAffineTransformMakeTranslation(translationPercentage * menuParentView.frame.width - menuParentView.frame.width, 0)
            menuBackgroundVuew.alpha = translationPercentage
        }
    }
    

    // MARK: - IBActions -
  
    @IBAction func menuBackButtonClicked(sender: AnyObject) {
        _hideMenu()
    }
    @IBAction func menuButtonClicked(sender: UIButton) {
        _showMenu()
    }
    // MARK: - Private functions -
    
    func _showMenu() {
        UIView.animateWithDuration(0.2) { 
            self.menuBackgroundVuew.alpha = 1
            self.menuParentView.transform = CGAffineTransformIdentity
        }
    }
    
    func _hideMenu() {
        UIView.animateWithDuration(0.2) {
            self.menuBackgroundVuew.alpha = 0
            self.menuParentView.transform = CGAffineTransformMakeTranslation(-screenWidth(), 0)
        }
    }
    
    override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {
        if segue.identifier == MenuViewController.storyboardIdentifier {
            menuViewController = segue.destinationViewController as? MenuViewController
        }
    }
}
